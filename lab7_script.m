function [unctr, K, b,sys] = Modal_control (A,B,tgel,sigma,bat,niewt)

C=eye(3);
D=0;
%lab 7
% математическая модель исходной системы в пространстве состояний


%проверка управляемости матриц А,В
Co = ctrb(A,B);
unctr = length(A)-rank(Co) ; %Число неуправляемых мод
if unctr==0
   disp ( 'Система полностью управляема' )
else 
   T = 'Число неуправляемых мод равняется';
   disp ([T unctr])	
end

%расчет желаемых поюсов исходя из порядка системы и времени переходного
%процесса

% n= input('Введите порядок системы n = ');
% tgel= input('Введите желаемое время переходного процесса tgel = ');
% sigma= input('Перерегулирование допустимо? - да -1, нет -0 = ');

if sigma == 1

[z,p,k]=buttap(n);
[b,a]=zp2tf(z,p,k);
SYS=tf(b,a);
[Y,T]=step(SYS,0:0.01:30);
j=length(Y);
while (Y(j) < 1.05)&&(Y(j) > 0.95) 
j=j-1;
end 
tau=T(j); %Нормированное значение времени переходного процесса
w0=tau/tgel; %Значение среднегеометрического корня
for i=1:n %Расчет коэффициентов желаемого полинома
  a(i+1)=a(i+1).*w0^(i);	
end
b=a(n+1); %Расчет дополнительного коэффициента в прямой цепи
SYS=tf(b,a);
[z,p,k]=zpkdata(SYS,'v'); %Векторы нулей, полюсов и коэффициент          
%усиления желаемой системы                      
step(SYS), grid %Переходная характеристика системы
disp('Вектор желаемых полюсов')
p
disp('Коэффициент усиления в прямой цепи')
b
end

if sigma == 0


    p(1:n)=-1;
    a=poly(p);
    SYS=tf(1,a);

[Y,T]=step(SYS,0:0.01:30);
j=length(Y);
while (Y(j) < 1.05)&&(Y(j) > 0.95) 
j=j-1;
end 
tau=T(j); %Нормированное значение времени переходного процесса
w0=tau/tgel; %Значение среднегеометрического корня
for i=1:n %Расчет коэффициентов желаемого полинома
  a(i+1)=a(i+1).*w0^(i);	
end
b=a(n+1); %Расчет дополнительного коэффициента в прямой цепи
SYS=tf(b,a);
[z,p,k]=zpkdata(SYS,'v'); %Векторы нулей, полюсов и коэффициент          
%усиления желаемой системы                      
step(SYS), grid %Переходная характеристика системы
disp('Вектор желаемых полюсов')
p
disp('Коэффициент усиления в прямой цепи')
b

end

%Расчет коэффицентов модального регулятора
K = place(A,B,p)

[A,B,C,D]=linmod('start_mdl_dc_motor');
sys = ss(A,B,C,D);
